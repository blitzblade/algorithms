package functions

func InsertionSort(arr []int) []int {
	//arr
	//{0, 2, 5, 4, 6, 1, 3}
	//{0, 2, 4, 5, 6, 1, 3}
	//{0, 2, 4, 5, 6, 1, 3}
	//{0, 1, 2, 4, 5, 6, 3}
	for i := 2; i < len(arr); i++ {
		//2
		//3
		//4
		//5
		//6
		key := arr[i]
		//2
		//4
		//6
		//1
		//3
		j := i - 1 
		//1
		//2
		//3
		//4
		//5

		for j >= 1 && arr[j] > key {
			arr[j+1] = arr[j] 
			//arr[2] = arr[1] | {0, 5, 5, 4, 6, 1, 3}

			//  arr[3] = arr[2] | {0, 2, 5, 5, 6, 1, 3}
			//  arr[2] = arr[1] | {0, 2, 2, 5, 6, 1, 3}
			
			//  arr[5] = arr[4] | {0, 2, 4, 5, 6, 6, 3}
			//  arr[4] = arr[3] | {0, 2, 4, 5, 5, 6, 3}
			//  arr[3] = arr[2] | {0, 2, 4, 4, 5, 6, 3}
			//  arr[3] = arr[2] | {0, 2, 2, 4, 5, 6, 3}

			//  arr[6] = arr[5] | {0, 1, 2, 4, 5, 6, 6}
			//  arr[5] = arr[4] | {0, 1, 2, 4, 5, 5, 6}
			//  arr[4] = arr[3] | {0, 1, 2, 4, 4, 5, 6}

			j = j - 1 
			//0

			//1 no j = 0 because arr[j] at j = 1 is less than key

			//3
			//2
			//1
			//0

			//4
			//3
			//2

		}
		arr[j + 1] = key 
		//arr[1] = 2 | {0, 2, 5, 4, 6, 1, 3}
		//arr[2] = 4 | {0, 2, 4, 5, 6, 1, 3}
		//arr[4] = 6 | {0, 2, 4, 5, 6, 1, 3}
		//arr[1] = 1 | {0, 1, 2, 4, 5, 6, 3}
		//arr[3] = 3 | {0, 1, 2, 3, 4, 5, 6}

	}
	return arr
}